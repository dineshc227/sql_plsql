--list all year,month wise,deptno wise no.of employees working

select to_char(hiredate,'yyyy') as year,to_char(hiredate,'MON') AS MON ,deptno,count(*) as count from emp 
group by to_char(hiredate,'yyyy') ,to_char(hiredate,'MON'),deptno

2.SINGLE ROW FUNCTION:
---------------------
A.STRING FUNCTION /character function 
B.MATHEMATICAL FUNCTION /Numeric function 
C.DATETIME FUNCTION
D.CONVERSION FUNCTION
E.SPECIAL FUNCTION
F.OLAP FUNCTION (ONLINE ANALYTICAL PROCESSING) / ANALYTICAL FUNCTION 
	A.RANK()	B.DENSE_RANK()	C.ROW_NUMBER()

The character functions that return character values are:

select ename,length(ename) as length,lower(ename) as lower,upper(ename) as upper,
initcap(ename) as initcap,reverse(ename) as reverse  from emp


select LOWER(‘SAMI’) from dual;

select UPPER(‘Sami’) from dual;

select INITCAP(‘mohammed sami’) from dual;
-
select length(‘mohammed sami’) from dual;

select substr('mohammed sami',10,3) from dual;

select instr('mohammed sami','a') from dual;

select replace('ali mohd khan','mohd','mohammed') from dual;


select translate('ABC',
'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',
      'BCDEFGHIJKLMNOPQRSTUVWXYZAbcdefghijklmnopqrstuvwxyza') as encrypt from dual;

Encrypt
-----------
BCD

SOUNDEX

This function is used to check pronounciation rather than exact characters. For example many people write names as “smith” or “smyth” or “smythe” but they are pronounced as smith only.

Select ename from emp where soundex(ename)=soundex('smith');

ENAME
---------
Smith
Smyth
Smythe


 
RPAD

Right pads a given string with a given character to n number of characters.

Example

The following query rights pad ename with '*'  until it becomes 10 characters.

select rpad(ename,10,'*') from emp;

Ename
----------
Smith*****
John******
Mohammed**
Sami******

LPAD

Left pads a given string with a given character upto n number of characters.

Example

The following query left pads ename with '*'  until it becomes 10 characters.

select lpad(ename,10,'*') from emp;

Ename
----------
*****Smith
******John
**Mohammed
******Sami

LTRIM

Trims blank spaces from a given string from left.

Example

The following query returns string “       Interface        “ left trimmed.

select ltrim('       Interface       ') from dual;

Ltrim
--------------
Interface 

RTRIM

Trims blank spaces from a given string from Right.

Example

The following query returns string “       Interface        “ right trimmed.

select rtrim('       Interface       ') from dual;

Rtrim
------------
   Interface 

TRIM

Trims a given character from left or right or both from a given string.

Example

The following query removes zero from left and right of a given string.

Select trim(0 from '00003443500') from dual;

Trim
----------
34435

CONCAT

Combines a given string with another string.

Example

The following Query combines ename with literal string “ is a “ and jobid.

Select concat(concat(ename,' is a '),job) from emp;

Concat
----------------
Smith is a clerk
John is a Manager
Sami is a G.Manager

select ename,job from emp
select concat(concat(ename,' is a '),job) from emp
select ename ||' is a '||job from emp where ename='WARD'




Numeric Functions

ABS
ACOS
ASIN
ATAN
CEIL
COS
EXP
FLOOR
LOG
MOD
POWER
ROUND (number)
SIGN
SIN
SQRT
TAN
TRUNC (number)


select abs(-4999) from dual
select sin(30) from  dual
select cos(30) from dual
select tan(30) from dual
select log(10,2) from dual
select exp(100) from dual
select sqrt(100) from dual
select power(10,3) from dual
select mod(100,3) from dual
select sign(-49) from dual
select sign(8484) from dual
select sign(0) from dual
select round(8888.8888,2) from dual
select round(8888.8888,1) from dual
select round(8888.8888,0) from dual
select trunc(8888.8888,2) from dual
select trunc(8888.8888,1) from dual
select trunc(8888.8888,0) from dual
select ceil(8888.8888) from dual
select floor(8888.88888) from dual



Datetime Functions:
----------------

ADD_MONTHS(SYDATE,100)
CURRENT_DATE()
LAST_DAY(SYSDATE)
MONTHS_BETWEEN(DATE1,DATE2)
NEXT_DAY(SYSDATE,'TUESDAY')
ROUND (date)
SYSDATE
SYSTIMESTAMP
CURRENT_TIMESTAMP

SELECT SYSDATE FROM DUAL;
SELECT CURRENT_DATE FROM DUAL;
SELECT SYSTIMESTAMP FROM DUAL;
SELECT CURRENT_TIMESTAMP FROM DUAL;
SELECT SYSDATE FROM DUAL
SELECT TO_CHAR(SYSDATE,'YYYY') FROM DUAL
SELECT TO_CHAR(SYSDATE,'MONTH') FROM DUAL
SELECT TO_CHAR(SYSDATE,'DAY') FROM DUAL
SELECT EXTRACT(YEAR FROM SYSDATE) FROM DUAL
SELECT EXTRACT(MONTH FROM SYSDATE) FROM DUAL
SELECT EXTRACT(DAY FROM SYSDATE) FROM DUAL
SELECT SYSDATE +100 FROM DUAL
SELECT ADD_MONTHS(SYSDATE,100) FROM DUAL
SELECT TO_CHAR(SYSDATE,'YYYY')+100 FROM DUAL
SELECT LAST_DAY(SYSDATE) FROM DUAL
SELECT SYSDATE - TO_CHAR(SYSDATE-1,'DD')  FROM DUAL
SELECT TRUNC(TRUNC(MONTHS_BETWEEN(SYSDATE,'04-JAN-94'))/12) AS YEAR FROM DUAL
SELECT TRUNC(MOD(MONTHS_BETWEEN(SYSDATE,'04-JAN-94'),12)) FROM DUAL


select round(sysdate,'dd') from dual
select round(sysdate,'mm') from dual
select round(sysdate,'yyyy') from dual
/


--how to get year,months and days between 2 dates (FAQ)

select ENAME,
  hiredate,
  trunc(months_between(sysdate,hiredate) / 12) as years,
  MOD(trunc(months_between(sysdate,hiredate)),12)
     as months,
trunc(sysdate) - add_months(hiredate, 
trunc(months_between(sysdate,hiredate))) as days
from emp
/



--Particular dates

select   trunc(months_between(sysdate,'29-10-91') / 12) as years,
  MOD(trunc(months_between(sysdate,'29-10-91')),12)     as months,
trunc(sysdate) - add_months('29-10-91',trunc(months_between(sysdate,'29-10-91'))) as days
from dual
/

Conversion Functions:
---------------------
Conversion functions are used to convert a value from one datatype to another datatype.

Number -> Varchar => to_char()
 
Varchar -> Date => to_date()

varchar -> number => to_number()

Date ->timestamp => to_timestamp()

TO_CHAR (character)
TO_CHAR (datetime)
TO_CHAR (number)
TO_DATE(otherdatatype)
TO_NUMBER(CHAR)
TO_TIMESTAMP(DATE)



SELECT TO_CHAR(SYSDATE,'DD-MM-YY') FROM DUAL
SELECT TO_CHAR(SYSDATE,'DD-MONTH-YEAR') FROM DUAL
SELECT TO_CHAR(SYSDATE,'DAY') FROM DUAL
SELECT TO_CHAR(SYSDATE,'MONTH') FROM DUAL
SELECT TO_CHAR(SYSDATE,'YYYY') FROM DUAL
SELECT TO_DATE('30-OCTOBER-2018') FROM DUAL
SELECT TO_NUMBER('1000') + TO_NUMBER('200') FROM DUAL


SELECT TO_NUMBER('100') + TO_NUMBER('200') FROM DUAL
/
SELECT TO_CHAR(SYSDATE,'DAY') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'MM') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YY') FROM DUAL;




SPECIAL FUNCTION:
------------------
1.USER() -> it returns current user name
2.NVL(EXP1,EXP2)  -> to convert null values into some other values
3.DECODE() -> case expression
4.VSIZE() --varrying array size
5.COALESCE()
6.NVL2(EXP1,EXP2,EXP3) - if exp1 is null then return exp3 else exp2.

SQL>SELECT USER FROM DUAL;

SQL> SHOW USER;

SQL> SELECT ENAME,EMPNO,SAL,COMM,SAL+NVL(COMM,0) AS TOTAL FROM EMP;

SQL> UPDATE EMP SET SAL=DECODE(DEPTNO,10,100,20,200,30,300);

SQL> SELECT VSIZE('SQLSCHOOL') FROM DUAL;

--How to check the total table size?

SELECT SUM(BYTES) / 1024 FROM DBA_SEGMENTS WHERE SEGMENT_NAME='EMP'

* coalesce(exp1,exp2,exp3......)

* It returns first not null values or it picks first not null values.

> select coalesce(100+null,
250-null+1000,12*null,255,2345,9888) from dual

select ename,empno,sal,comm,sal+nvl(comm,0) as total  from emp
select ename,empno,sal,comm,sal+nvl2(comm,comm* 0.5,0) as total from emp

select ename,empno,sal,comm,sal+nvl(comm,0) as total from emp
--if exp1 is null then return exp2 else exp1

select ename,empno,sal,comm,sal+nvl2(comm,comm,0) as total from emp
--if exp1 is null then return exp3 else exp2

Analytical function:
-------------------
OLAP FUNCTION : (ONLINE ANALYTICAL PROCESSING)
----------------
A.RANK()
B.DENSE_RANK()
C.ROW_NUMBER()


--List all ename,empno,sal,Rank from emp table

select ename,empno,sal,rank() over(order by sal desc)
as rnk from emp;

--List all ename,empno,sal,denserank from emp table
select ename,empno,sal,dense_rank() over(order by sal desc) as dense from emp;


--list all ename,empno,sal,rownumber from emp tabel
select ename,empno,sal,row_number() over(order by sal desc) as rn from emp;






Olap Function : (online analytical processing)
---------------
rank() -- it generates gap.
dense_rank() -- it does not generates gap 
row_number() - it generates sequential integer values

rank		dense_rank	row_number()
1		1			1
2		2			2		2	2	2	2		3
4		3			4	
4		3			5
4		3			6
7		4			7	
8		5			8
9		6			9
10		7			10
10		7			11
12		8			12		
13		9
14		10

select  *,rank() over(order by sal desc) as rnk from emp;
 
select *,dense_rank() over(order by sal desc) as dense from emp;

select *,row_number() over(order by sal desc) as rn from emp;

SELECT ENAME,EMPNO,HIREDATE,SAL,DENSE_RANK()
OVER(ORDER BY SAL DESC,HIREDATE ASC) AS DENSE FROM
EMP
/

--list all ename,empno,sal,rank from emp table
select ename,empno,sal,
rank() over(order by sal desc) as rnk,
dense_rank()over(order by sal desc) as dense,
row_number() over(order by sal desc) as rn from emp

Partition by:
-------------
SELECT ENAME,EMPNO,DEPTNO,SAL,RANK() OVER(PARTITION BY deptno  ORDER BY SAL DESC) AS RNK FROM EMP
